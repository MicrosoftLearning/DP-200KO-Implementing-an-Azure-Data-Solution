<?xml version="1.0" encoding="utf-8"?>
<doc>
    <assembly>
        <name>GalaSoft.MvvmLight.Platform</name>
    </assembly>
    <members>
        <member name="T:GalaSoft.MvvmLight.CommandWpf.RelayCommand">
            <summary>대리자를 호출하여 해당 기능을 다른 개체에 중계하는 것이 유일한 목적인 명령입니다. CanExecute 메서드의 기본 반환 값은 &apos;true&apos;입니다. 이 클래스에서는 Execute 및 CanExecute 콜백 메서드에서 명령 매개 변수를 허용할 수 없습니다.</summary>
            <remarks>WPF4.5 이상의 클래스를 사용하는 경우 GalaSoft.MvvmLight.CommandWpf 네임스페이스(GalaSoft.MvvmLight.Command 대신)를 사용해야 합니다. 이렇게 하면 CanExecute 대리자를 기반으로 컨트롤의 자동 사용/비활성화를 처리하는 CommandManager 클래스를 활성화(또는 복원)합니다.</remarks>
        </member>
        <member name="M:GalaSoft.MvvmLight.CommandWpf.RelayCommand.#ctor(System.Action)">
            <summary>항상 실행할 수 있는 RelayCommand 클래스의 새 인스턴스를 초기화합니다.</summary>
            <param name="execute">실행 논리입니다. 중요 WeakActions(http://stackoverflow.com/questions/25730530/ 참조)를 사용하기 때문에 현재 클로저는 지원되지 않습니다.</param>
            <exception cref="T:System.ArgumentNullException">실행 인수가 null인 경우.</exception>
        </member>
        <member name="M:GalaSoft.MvvmLight.CommandWpf.RelayCommand.#ctor(System.Action,System.Func{System.Boolean})">
            <summary>RelayCommand 클래스의 새 인스턴스를 초기화합니다.</summary>
            <param name="execute">실행 논리입니다. 중요 WeakActions(http://stackoverflow.com/questions/25730530/ 참조)를 사용하기 때문에 현재 클로저는 지원되지 않습니다.</param>
            <param name="canExecute">실행 상태 논리입니다.</param>
            <exception cref="T:System.ArgumentNullException">실행 인수가 null인 경우. 중요 WeakActions(http://stackoverflow.com/questions/25730530/ 참조)를 사용하기 때문에 현재 클로저는 지원되지 않습니다.</exception>
        </member>
        <member name="E:GalaSoft.MvvmLight.CommandWpf.RelayCommand.CanExecuteChanged">
            <summary>명령을 실행해야 하는지 여부에 영향을 주는 변경이 발생할 때 발생합니다.</summary>
        </member>
        <member name="M:GalaSoft.MvvmLight.CommandWpf.RelayCommand.RaiseCanExecuteChanged">
            <summary><see cref="E:GalaSoft.MvvmLight.CommandWpf.RelayCommand.CanExecuteChanged" />이벤트를 발생시킵니다.</summary>
        </member>
        <member name="M:GalaSoft.MvvmLight.CommandWpf.RelayCommand.CanExecute(System.Object)">
            <summary>명령을 현재 상태에서 실행할 수 있는지 여부를 결정하는 메서드를 정의합니다.</summary>
            <param name="parameter">이 매개 변수는 항상 무시됩니다.</param>
            <returns>이 명령을 실행할 수 있는 경우 true, 그렇지 않을 경우 false입니다.</returns>
        </member>
        <member name="M:GalaSoft.MvvmLight.CommandWpf.RelayCommand.Execute(System.Object)">
            <summary>명령을 호출할 때 호출할 메서드를 정의합니다.</summary>
            <param name="parameter">이 매개 변수는 항상 무시됩니다.</param>
        </member>
        <member name="T:GalaSoft.MvvmLight.CommandWpf.RelayCommand`1">
            <summary>대리자를 호출하여 해당 기능을 다른 개체에 중계하는 것이 유일한 목적인 일반 명령입니다. CanExecute 메서드의 기본 반환 값은 &apos;true&apos;입니다. 이 클래스를 사용하면 Execute 및 CanExecute 콜백 메서드에서 명령 매개 변수를 허용할 수 있습니다.</summary>
            <typeparam name="T">명령 매개 변수의 형식입니다.</typeparam>
            <remarks>WPF4.5 이상의 클래스를 사용하는 경우 GalaSoft.MvvmLight.CommandWpf 네임스페이스(GalaSoft.MvvmLight.Command 대신)를 사용해야 합니다. 이렇게 하면 CanExecute 대리자를 기반으로 컨트롤의 자동 사용/비활성화를 처리하는 CommandManager 클래스를 활성화(또는 복원)합니다.</remarks>
        </member>
        <member name="M:GalaSoft.MvvmLight.CommandWpf.RelayCommand`1.#ctor(System.Action{`0})">
            <summary>항상 실행할 수 있는 RelayCommand 클래스의 새 인스턴스를 초기화합니다.</summary>
            <param name="execute">실행 논리입니다. 중요 WeakActions(http://stackoverflow.com/questions/25730530/ 참조)를 사용하기 때문에 현재 클로저는 지원되지 않습니다.</param>
            <exception cref="T:System.ArgumentNullException">실행 인수가 null인 경우.</exception>
        </member>
        <member name="M:GalaSoft.MvvmLight.CommandWpf.RelayCommand`1.#ctor(System.Action{`0},System.Func{`0,System.Boolean})">
            <summary>RelayCommand 클래스의 새 인스턴스를 초기화합니다.</summary>
            <param name="execute">실행 논리입니다. 중요 WeakActions(http://stackoverflow.com/questions/25730530/ 참조)를 사용하기 때문에 현재 클로저는 지원되지 않습니다.</param>
            <param name="canExecute">실행 상태 논리입니다. 중요 WeakActions(http://stackoverflow.com/questions/25730530/ 참조)를 사용하기 때문에 현재 클로저는 지원되지 않습니다.</param>
            <exception cref="T:System.ArgumentNullException">실행 인수가 null인 경우.</exception>
        </member>
        <member name="E:GalaSoft.MvvmLight.CommandWpf.RelayCommand`1.CanExecuteChanged">
            <summary>명령을 실행해야 하는지 여부에 영향을 주는 변경이 발생할 때 발생합니다.</summary>
        </member>
        <member name="M:GalaSoft.MvvmLight.CommandWpf.RelayCommand`1.RaiseCanExecuteChanged">
            <summary><see cref="E:GalaSoft.MvvmLight.CommandWpf.RelayCommand`1.CanExecuteChanged" />이벤트를 발생시킵니다.</summary>
        </member>
        <member name="M:GalaSoft.MvvmLight.CommandWpf.RelayCommand`1.CanExecute(System.Object)">
            <summary>명령을 현재 상태에서 실행할 수 있는지 여부를 결정하는 메서드를 정의합니다.</summary>
            <param name="parameter">명령에서 사용하는 데이터입니다. 명령에 데이터를 전달할 필요가 없는 경우 이 개체를 null 참조로 설정할 수 있습니다.</param>
            <returns>이 명령을 실행할 수 있는 경우 true, 그렇지 않을 경우 false입니다.</returns>
        </member>
        <member name="M:GalaSoft.MvvmLight.CommandWpf.RelayCommand`1.Execute(System.Object)">
            <summary>명령을 호출할 때 호출할 메서드를 정의합니다.</summary>
            <param name="parameter">명령에서 사용하는 데이터입니다. 명령에 데이터를 전달할 필요가 없는 경우 이 개체를 null 참조로 설정할 수 있습니다.</param>
        </member>
        <member name="T:GalaSoft.MvvmLight.Command.EventToCommand">
            <summary>이 <see cref="T:System.Windows.Interactivity.TriggerAction`1" />은 FrameworkElement의 모든 이벤트를 <see cref="T:System.Windows.Input.ICommand" />에 바인딩하는 데 사용할 수 있습니다. 일반적으로 이 요소는 XAML에서 연결된 요소를 ViewModel에 있는 명령에 연결하는 데 사용됩니다. 이 트리거는 FrameworkElement 또는 FrameworkElement에서 파생된 클래스에만 연결할 수 있습니다. <para>발생한 이벤트의 EventArgs에 액세스하려면 RelayCommand&lt;/EventArgs&gt;을 사용하고&lt;EventArgs&gt; CommandParameter 및 CommandParameterValue를 비워 둡니다!</para></summary>
        </member>
        <member name="F:GalaSoft.MvvmLight.Command.EventToCommand.CommandParameterProperty">
            <summary><see cref="P:GalaSoft.MvvmLight.Command.EventToCommand.CommandParameter" />종속성 속성을 식별합니다.</summary>
        </member>
        <member name="F:GalaSoft.MvvmLight.Command.EventToCommand.CommandProperty">
            <summary><see cref="P:GalaSoft.MvvmLight.Command.EventToCommand.Command" />종속성 속성을 식별합니다.</summary>
        </member>
        <member name="F:GalaSoft.MvvmLight.Command.EventToCommand.MustToggleIsEnabledProperty">
            <summary><see cref="P:GalaSoft.MvvmLight.Command.EventToCommand.MustToggleIsEnabled" />종속성 속성을 식별합니다.</summary>
        </member>
        <member name="P:GalaSoft.MvvmLight.Command.EventToCommand.Command">
            <summary>이 트리거가 바인딩된 ICommand를 가져오거나 설정합니다. 이것은 DependencyProperty입니다.</summary>
        </member>
        <member name="P:GalaSoft.MvvmLight.Command.EventToCommand.CommandParameter">
            <summary><see cref="P:GalaSoft.MvvmLight.Command.EventToCommand.Command" />이 트리거에 첨부된 개체에 전달될 개체를 가져옵니다. 이것은 DependencyProperty입니다.</summary>
        </member>
        <member name="P:GalaSoft.MvvmLight.Command.EventToCommand.CommandParameterValue">
            <summary><see cref="P:GalaSoft.MvvmLight.Command.EventToCommand.Command" />이 트리거에 첨부된 개체에 전달될 개체를 가져옵니다. 이 속성은 Silverlight 버전과 호환됩니다. DependencyProperty는 아닙니다. 데이터 바인딩의 경우 <see cref="P:GalaSoft.MvvmLight.Command.EventToCommand.CommandParameter" /> 속성을 사용합니다.</summary>
        </member>
        <member name="P:GalaSoft.MvvmLight.Command.EventToCommand.MustToggleIsEnabled">
            <summary><see cref="P:GalaSoft.MvvmLight.Command.EventToCommand.Command" /> 속성의 CanExecuteChanged 이벤트가 발생할 때 연결된 요소를 사용하지 않도록 설정해야 하는지 여부를 나타내는 값을 가져옵니다. 이 속성이 true이고 명령의 CanExecute 메서드가 false를 반환하면 요소가 비활성화됩니다. 이 속성이 false이면 명령의 CanExecute 메서드가 변경될 때 요소가 비활성화되지 않습니다. 이것은 DependencyProperty입니다.</summary>
        </member>
        <member name="P:GalaSoft.MvvmLight.Command.EventToCommand.MustToggleIsEnabledValue">
            <summary><see cref="P:GalaSoft.MvvmLight.Command.EventToCommand.Command" /> 속성의 CanExecuteChanged 이벤트가 발생할 때 연결된 요소를 사용하지 않도록 설정해야 하는지 여부를 나타내는 값을 가져옵니다. 이 속성이 true이고 명령의 CanExecute 메서드가 false를 반환하면 요소가 비활성화됩니다. 이 속성은 Silverlight 버전과 호환됩니다. DependencyProperty는 아닙니다. 데이터 바인딩의 경우 <see cref="P:GalaSoft.MvvmLight.Command.EventToCommand.MustToggleIsEnabled" /> 속성을 사용합니다.</summary>
        </member>
        <member name="M:GalaSoft.MvvmLight.Command.EventToCommand.OnAttached">
            <summary>이 트리거가 FrameworkElement에 연결될 때 호출됩니다.</summary>
        </member>
        <member name="M:GalaSoft.MvvmLight.Command.EventToCommand.GetAssociatedObject">
            <summary>이 메서드는 Silverlight 버전과 호환됩니다.</summary>
            <returns>이 트리거가 연결된 FrameworkElement입니다.</returns>
        </member>
        <member name="M:GalaSoft.MvvmLight.Command.EventToCommand.GetCommand">
            <summary>이 속성은 Silverlight 3 버전과 호환됩니다.</summary>
            <returns>이 트리거가 호출될 때 실행해야 하는 명령입니다.</returns>
        </member>
        <member name="P:GalaSoft.MvvmLight.Command.EventToCommand.PassEventArgsToCommand">
            <summary>이 작업을 트리거한 이벤트의 EventArgs가 바인딩된 RelayCommand에 전달되어야 하는지 여부를 지정합니다. 이 경우 명령은 해당 형식의 인수를 수락해야 합니다(예:&lt;MouseButtonEventArgs&gt;&lt;/MouseButtonEventArgs&gt; RelayCommand).</summary>
        </member>
        <member name="P:GalaSoft.MvvmLight.Command.EventToCommand.EventArgsConverter">
            <summary><see cref="P:GalaSoft.MvvmLight.Command.EventToCommand.PassEventArgsToCommand"/>를 사용할 때 EventArgs를 변환하는 데 사용되는 변환기를 가져오거나 설정합니다. PassEventArgsToCommand이 false이면 이 속성은 사용되지 않습니다.</summary>
        </member>
        <member name="F:GalaSoft.MvvmLight.Command.EventToCommand.EventArgsConverterParameterPropertyName">
            <summary><see cref="P:GalaSoft.MvvmLight.Command.EventToCommand.EventArgsConverterParameter" />종속성 속성의 이름입니다.</summary>
        </member>
        <member name="P:GalaSoft.MvvmLight.Command.EventToCommand.EventArgsConverterParameter">
            <summary><see cref="P:GalaSoft.MvvmLight.Command.EventToCommand.PassEventArgsToCommand"/>를 사용할 때 EventArgs를 변환하는 데 사용되는 변환기의 매개 변수를 가져오거나 설정합니다. PassEventArgsToCommand이 false이면 이 속성은 사용되지 않습니다. 종속성 속성입니다.</summary>
        </member>
        <member name="F:GalaSoft.MvvmLight.Command.EventToCommand.EventArgsConverterParameterProperty">
            <summary><see cref="P:GalaSoft.MvvmLight.Command.EventToCommand.EventArgsConverterParameter" /> 종속성 속성을 식별합니다.</summary>
        </member>
        <member name="F:GalaSoft.MvvmLight.Command.EventToCommand.AlwaysInvokeCommandPropertyName">
            <summary><see cref="P:GalaSoft.MvvmLight.Command.EventToCommand.AlwaysInvokeCommand" />종속성 속성의 이름입니다.</summary>
        </member>
        <member name="P:GalaSoft.MvvmLight.Command.EventToCommand.AlwaysInvokeCommand">
            <summary>연결된 컨트롤을 사용하지 않도록 설정한 경우에도 명령을 호출해야 하는지 나타내는 값을 가져오거나 설정합니다. 종속성 속성입니다.</summary>
        </member>
        <member name="F:GalaSoft.MvvmLight.Command.EventToCommand.AlwaysInvokeCommandProperty">
            <summary><see cref="P:GalaSoft.MvvmLight.Command.EventToCommand.AlwaysInvokeCommand" /> 종속성 속성을 식별합니다.</summary>
        </member>
        <member name="M:GalaSoft.MvvmLight.Command.EventToCommand.Invoke">
            <summary>EventArgs 없이 이 트리거를 프로그래밍 방식으로 호출하는 간단한 방법을 제공합니다.</summary>
        </member>
        <member name="M:GalaSoft.MvvmLight.Command.EventToCommand.Invoke(System.Object)">
            <summary>트리거를 실행합니다. <para>발생한 이벤트의 EventArgs에 액세스하려면 RelayCommand&lt;/EventArgs&gt;을 사용하고&lt;EventArgs&gt; CommandParameter 및 CommandParameterValue를 비워 둡니다!</para></summary>
            <param name="parameter">발생한 이벤트의 EventArgs입니다.</param>
        </member>
        <member name="T:GalaSoft.MvvmLight.Command.IEventArgsConverter">
            <summary><see cref="P:GalaSoft.MvvmLight.Command.EventToCommand.PassEventArgsToCommand"/> 속성이 true인 경우 <see cref="T:GalaSoft.MvvmLight.Command.EventToCommand"/> 클래스에서 EventArgs를 변환하는 데 사용되는 변환기의 정의입니다. 이 클래스의 인스턴스를 EventToCommand 인스턴스의 <see cref="P:GalaSoft.MvvmLight.Command.EventToCommand.EventArgsConverter"/> 속성으로 설정합니다.</summary>
        </member>
        <member name="M:GalaSoft.MvvmLight.Command.IEventArgsConverter.Convert(System.Object,System.Object)">
            <summary>EventArgs 인스턴스를 변환하는 데 사용되는 메서드입니다.</summary>
            <param name="value">EventToCommand 인스턴스가 처리하는 이벤트가 전달한 EventArgs의 인스턴스입니다.</param>
            <param name="parameter">변환에 사용되는 선택적 매개 변수입니다. <see cref="P:GalaSoft.MvvmLight.Command.EventToCommand.EventArgsConverterParameter"/> 속성을 사용하여 이 값을 설정합니다. null일 수 있습니다.</param>
            <returns>변환된 값입니다.</returns>
        </member>
        <member name="T:GalaSoft.MvvmLight.Threading.DispatcherHelper">
            <summary>UI 스레드의 디스패처 작업에 대한 도우미 클래스입니다.</summary>
        </member>
        <member name="P:GalaSoft.MvvmLight.Threading.DispatcherHelper.UIDispatcher">
            <summary><see cref="M:GalaSoft.MvvmLight.Threading.DispatcherHelper.Initialize" /> 메서드가 UI 스레드에서 호출된 후 UI 스레드의 디스패처에 대한 참조를 가져옵니다.</summary>
        </member>
        <member name="M:GalaSoft.MvvmLight.Threading.DispatcherHelper.CheckBeginInvokeOnUI(System.Action)">
            <summary>UI 스레드에서 작업을 실행합니다. UI 스레드에서 이 메서드를 호출하면 작업이 즉시 실행됩니다. 메서드가 다른 스레드에서 호출되면 작업은 UI 스레드의 디스패처에서 큐에 대기되고 비동기적으로 실행됩니다. <para>UI 스레드에 대한 추가 작업의 경우 속성에 대한 UI 스레드의 디스패처에 대한 참조를 얻을 수 있습니다.<see cref="P:GalaSoft.MvvmLight.Threading.DispatcherHelper.UIDispatcher" /></para></summary>
            <param name="action">UI 스레드에서 실행될 작업입니다.</param>
        </member>
        <member name="M:GalaSoft.MvvmLight.Threading.DispatcherHelper.RunAsync(System.Action)">
            <summary>UI 스레드에서 비동기적으로 작업을 호출합니다.</summary>
            <param name="action">실행되어야 하는 작업입니다.</param>
            <returns>BeginInvoke가 호출된 직후에 반환되는 개체로서 이벤트 큐에서 실행을 보류 중인 동안 대리자와 상호 작용하는 데 사용할 수 있습니다.</returns>
        </member>
        <member name="M:GalaSoft.MvvmLight.Threading.DispatcherHelper.Initialize">
            <summary>이 메서드는 <see cref="P:GalaSoft.MvvmLight.Threading.DispatcherHelper.UIDispatcher" /> 속성이 초기화되도록 UI 스레드에서 한 번 호출해야 합니다. <para>Silverlight 애플리케이션에서 MainPage가 생성된 후 Application_Startup 이벤트 처리기에서 이 메서드를 호출합니다.</para> <para>WPF에서 정적 App() 생성자에서 이 메서드를 호출합니다.</para></summary>
        </member>
        <member name="M:GalaSoft.MvvmLight.Threading.DispatcherHelper.Reset">
            <summary>다음을 삭제하여 클래스를 재설정합니다. <see cref="P:GalaSoft.MvvmLight.Threading.DispatcherHelper.UIDispatcher"/></summary>
        </member>
    </members>
</doc>